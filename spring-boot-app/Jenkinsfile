pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage("Git Checkout") {
            steps {
                git branch: 'main', url: 'https://github.com/abhi-kr07/java-maven-cicd.git'
            }
        }

        stage("Unit Test") {
            steps {
                sh 'cd spring-boot-app && mvn test -DskipTests=true'
            }
        }

        stage("Build") {
            steps {
                sh 'cd spring-boot-app && mvn clean package -DskipTests=true'
            }
        }

        stage("SonarQube") {
            environment {
                SONAR_URL = 'http://3.6.41.128:9000/'
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        
        stage('Build and Push Docker Image') {
            environment {
            DOCKER_IMAGE = "abhishekk4/java-app:${BUILD_NUMBER}"
            REGISTRY_CREDENTIALS = credentials('dockerhub')
            }
            steps {
                script {
                sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                    dockerImage.push()
                }
                }
            }
        }

        stage("Deploy") {
            environment {
                GIT_REPO_NAME = 'java-maven-cicd'
                GIT_USER_NAME = 'abhi-kr07'
            }
            steps {
                withCredentials([string(credentialsId: 'github' , variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    git config user.email "abhishekkr98dhn@gmail.com"
                    git config user.name "abhi-kr07"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" springboot-manifest/deployment.yml
                    git add springboot-manifest/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
                }
            }
        }
    }
}
